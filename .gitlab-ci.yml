image: node:15-alpine
stages:
  - install
  - docker
  - build
  - deploy

install-dependencies:
  stage: install
  script:
    - npm install
  artifacts:
    expire_in: 1hr
    paths:
      - node_modules/
  cache:
    paths:
      - node_modules/

build-docker:
  image: docker:latest
  variables:
    DOCKER_DRIVER: overlay
    CRYPTOGRAPHY_DONT_BUILD_RUST: 1
  services:
  - docker:dind
  stage: docker
  environment: staging
  cache:
    paths:
      - node_modules/
  dependencies:
    - install-dependencies
  script:
    - echo "Build docker 🐳"
    - docker build . -t=platzi-conf-store-web:glb-${CI_PIPELINE_IID}

build-app:
  stage: build
  environment: staging
  cache:
    paths:
      - node_modules/
  dependencies:
    - install-dependencies
    - build-docker
  script:
    - echo "Deploy a review app 🛠"
    - touch .env
    - echo "ENVIRONMENT=${ENVIRONMENT}" > .env
    - echo "PAYPAL_SANDBOX_ACCOUNT=${PAYPAL_SANDBOX_ACCOUNT}" >> .env
    - echo "PAYPAL_CLIENT_ID=${PAYPAL_CLIENT_ID}" >> .env
    - echo "PAYPAL_SECRET=${PAYPAL_SECRET}" >> .env
    - echo "GOOGLE_MAPS_API_BASE_URL=${GOOGLE_MAPS_API_BASE_URL}" >> .env
    - echo "GOOGLE_MAPS_API_KEY=${GOOGLE_MAPS_API_KEY}" >> .env
    - npm run build
  artifacts:
    expire_in: 1hr
    paths:
      - dist

pages:
  stage: deploy
  environment: staging
  dependencies:
    - build-app
  script:
    - echo "Deploy a review app 🚀"
    - rm -rf public
    - cp dist/index.html dist/404.html
    - mv dist public
  artifacts:
    paths:
      - public
  only:
    - branches